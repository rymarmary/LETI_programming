Лабораторная работа №1 по дисциплине "Операционные системы"
Тема "Интерпретаторы командной строки ОС LINUX"
Рымарь Мария, студентка группы 1381

date (текущая дата):
Fri Feb 10 21:13:17 MSK 2023

whoami (имя пользователя):
rymarmary

tty (полное имя файла терминала):
/dev/pts/0

uname (название ОС):
Linux

sleep 5 (спать 5 секунд):
Ввод в терминал приостановился на 5 секунд

sleep 10000 (спать 10000 секунд):
Доступ в терминал прекратится на 10000 секунд, если не нажать ctrl+c. Нажали, прервали текущую команду, вернули доступность ввода команд в терминал.

man who (руководство по команде who):
В терминал было выведено описание команды who.
Зачастую в руководствах содержатся такие разделы: Name, Synopsis, Description, Options, Examples, Exit Values, Bugs, Author, Copyright, See Also, Files, Caveats, History.

ls (выводит существующие в каталоге файлы):
report.txt

ls -l (длинный формат вывода файла, размер, дата и время последних изменений):
total 4
-rw-r--r-- 1 rymarmary rymarmary 1476 Feb 10 21:35 report.txt

ls junk (выводит имя файла junk), ls junk temp (поочерёдно выводит названия этих файлов)

cat [файл/ы] (выводит в консоль содержимое файла, если их несколько, то поочерёдно)

mv report.txt rep.txt
Команда переименовала файл с отчётом на rep.txt, теперь в текущем каталоге нет файла report.txt

cp report.txt file.txt
С помощью этой команды происходит копирование содержимого первого файла во второй

rm file.txt
Коандой удаляется файл вместе с его содержимым, файла file.txt больше нет в каталоге

pwd (полное имя текущего каталога)
/home/rymarmary

полное имя файла prog.c
/home/rymarmary/prog.c

Отличий в выводах команд ls и ls rymarmary не будет
ls / (вывод всех папок в корневой директории)
ls -l / (полное имя всех файлов в корневой директории)
В каталоге bin находятся все установленные пакеты
Начальный каталог /home/rymarmary, если подняться на директорию выше, то откажемся в каталоге /home, если ещё выше и продолжать до бесконечности командой cd .., то каталог будет постоянным /, так как он корневой

ls -ld / (владелец корневого каталога)
drwxr-xr-x 19 root root 4096 Feb 10 21:05 /
ls -ld /bin (владелец каталога /bin)
lrwxrwxrwx 1 root root 7 Jan  4 00:40 /bin -> usr/bin
Нельзя изменять эти каталоги, так как владельцами является root 

Если не писать аргументы у команды cd, то вернёмся в домашний каталог

mkdir rymar (в текущей директории создаётся новый каталог rymar)
Писать полный путь для перехода в новый каталог нужно только в том случае, если этот каталог находится не в текущей директории.

cp ../prog.c rymar (копирование файла в новый каталог)

rmdir rymar (удаление каталога проходит безуспешно, так как в нём есть файлы):
rmdir: failed to remove 'rymar': Directory not empty

ps (вывод информации о процессах, запущенных с терминала)
  PID TTY          TIME CMD
   10 pts/0    00:00:00 bash
  447 pts/0    00:00:00 ps
ps -A (вывод информации о всех запущенных процессах)

В prog.c был добавлен код вывода helloworld.
Он был скомпилирован командой gcc, объектный файл имеет название prog.o
При запуске исполняемого файла вывелось приветственное сообщение. Этот вывод был переназначен в myfile.txt

- ./a.out: файл myfile.txt открыт (./a.out myfile.txt, указан существующий файл)
- ./a.out: неудача при попытке открыть файл rep.txt (./a.out rep.txt, указан несуществующий файл)
- открываемый файл не указан (./a.out)
Программа пытается открыть файл

Исправив изначальные программы, организовали конвейер с использованием команд || (OR) и | (оператор потока PIPE)
- ./a.out: неудача при попытке открыть файл my_file.txt (попытка открыть несуществующий файл командой ./first|./a.out)
- ./a.out: файл myfile.txt открыт (попытка открыть существующий файл командой ./first|./a.out, то есть вывод prog перенаправлен в my_open)
- myfile.txt (команда ./first||./a.out, то есть выполняются файлы по возможности, может одна программа не выполниться, завершает работу)

Команды с & (оператор амперсанда) и && (AND) с прошлыми исполняемыми файлами
1) ./first&./a.out (запускает программу в фоновом режиме, не совсем корректный ввод, нужно ./first& )
[1] 188
myfile.txt^C
[1]+  Done                    ./first
2) ./first&&./a.out (то есть должны выполниться обе программы)
myfile.txt^C

Изменив вторую программу, чтобы не было конвейера, вторая программа работала независимо от первой, получаем:
1) ./first&&./a.out (выполнились обе программы, доступен ввод в терминал)
myfile.txt./a.out: файл myfile.txt открыт
2) ./first&./a.out (обе программы были запущены в фоновом режиме)
[1] 232
myfile.txt./a.out: файл myfile.txt открыт[1]+  Done                    ./first

Создаём новые программы, из них делаем конвейер
1) Код первой программы
#include "stdio.h"
int main(){
int n = 5;
printf("%d", n);
return 0;
}
2) Код второй программы
#include "stdio.h"
int main (){
    int num;
    scanf("%d", &num);
    int d = 20;
    int ans = num + d;
        if (&ans == NULL) {
            printf("Не удалось произвести сложение.");
        }
        else {
            printf("%d - результат суммирования", ans);
        }

    return 0;
}
3) Результаты команд
- ./first|./a.out
25 - результат суммирования
- ./first||./a.out
5
- ./first && ./a.out
5^C (вызвала прерывание, так как команда не завершила работу)
- ./first & ./a.out
[1] 362
5^C
[1]+  Done                    ./first (аналогично предыдущей)

Поиск по шаблону с использованием команды grep 1234 text1.txt text2.txt
text1.txt:1234567890
text1.txt:1234
text2.txt:1234567890

Вывод каталогов, находящихся в /tmp командой ls -l /tmp | grep -E '^d[r,w,x,\-]{9}'
Вывод каталогов в /tmp, которые доступны для всех файлов командой ls -l /tmp | grep -E '^(d|\-)[r,w,x,\-]{6}r'
Вывод файлов, принадлежащих root командой ls -l /tmp | grep -E '\sroot\s'
Вывод файлов, не принадлежащих root командой ls -l /tmp | grep -Ev '\sroot\s'
Примеры, к сожалению, привести не могу, так как лаб работа выполняется на только что установленной wsl

Так как фоновых процессов, кроме терминала нет, то вывод команды ps -A | cut -d " " -f 3 следующий
PID
pts/0
pts/0

0
1
2
3
4
5
6
7
8
9
10
13
33
34
38
39
41
65534
100
101
102
103
104
105
106
107
1000
идентификаторы пользователей,  имеющих  x-терминалы на Вашей рабочей станции командой cat /etc/passwd | cut -d ":" -f 3

Моё входное имя системы командой whoami
rymarmary

Информация о моих файлах командой ls -l | tr [:lower:] [:upper:]
TOTAL 4
-RW-R--R-- 1 RYMARMARY RYMARMARY 118 FEB 11 01:14 REPORT.TXT

Сортировка файлов в текущем каталоге командой ls -l | sort
-rw-r--r-- 1 rymarmary rymarmary 187 Feb 11 01:18 report.txt
total 4
Тот же самый результат будет выводиться сортировкой в порядке уменьшения и увеличения размеров, так как файл один
Увеличения: ls -l | sort -n
Уменьшения: ls -l | sort -r

Повторяющиеся размеры файлов из каталога /usr/bin командой ls -l /usr/bin | cut -b 27-34 | uniq -d
  35344
  35328
  55808
      4
  14720
  14632
      3
      7
     23
     25
     24
     24
      4
      9
  39328
      7
  51616
  55712
  18664
     10
  35232
      6
     29

Сравнение двух текстовых файлов командой cmp text1.txt text.txt
text1.txt text2.txt differ: byte 1, line 1

Сравнение двух программных файлов командой cmp prog.c my_open.c
prog.c my_open.c differ: byte 1, line 1

Сравнение двух объектных файлов командой cmp first a.out
first a.out differ: byte 25, line 1

Выявление различий между файлами командой diff -e prog.c my_open.c
1,3c
#include <stdio.h>
int main(int argc, char *argv[]) {
char f[100];
scanf("%s", f);
if (fopen(f,"r") == NULL) {
printf("%s: неудача при попытке открыть файл %s",argv[0],f);
} else {
printf("%s: файл %s открыт",argv[0],f);
}
.
Файлы различаются с первой строки по третью, по диапазону можно понять, что в первом файле всего 3 строки.
Также в выводе представлены все строки второго файла, которые отличаются от первого.